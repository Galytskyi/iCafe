// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#ifndef PROTOBUF_order_2eproto__INCLUDED
#define PROTOBUF_order_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Order {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_order_2eproto();
void protobuf_AssignDesc_order_2eproto();
void protobuf_ShutdownFile_order_2eproto();

class wrapOrder;
class wrapOrders;

// ===================================================================

class wrapOrder : public ::google::protobuf::Message {
 public:
  wrapOrder();
  virtual ~wrapOrder();

  wrapOrder(const wrapOrder& from);

  inline wrapOrder& operator=(const wrapOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const wrapOrder& default_instance();

  void Swap(wrapOrder* other);

  // implements Message ----------------------------------------------

  wrapOrder* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const wrapOrder& from);
  void MergeFrom(const wrapOrder& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1 [default = 0];
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // optional int32 state = 2 [default = 0];
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 type = 3 [default = 0];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int64 order_id = 4 [default = 0];
  inline bool has_order_id() const;
  inline void clear_order_id();
  static const int kOrderIdFieldNumber = 4;
  inline ::google::protobuf::int64 order_id() const;
  inline void set_order_id(::google::protobuf::int64 value);

  // optional int32 order_time = 5 [default = 0];
  inline bool has_order_time() const;
  inline void clear_order_time();
  static const int kOrderTimeFieldNumber = 5;
  inline ::google::protobuf::int32 order_time() const;
  inline void set_order_time(::google::protobuf::int32 value);

  // optional int32 people = 6 [default = 0];
  inline bool has_people() const;
  inline void clear_people();
  static const int kPeopleFieldNumber = 6;
  inline ::google::protobuf::int32 people() const;
  inline void set_people(::google::protobuf::int32 value);

  // optional int32 cancel_code = 7 [default = 0];
  inline bool has_cancel_code() const;
  inline void clear_cancel_code();
  static const int kCancelCodeFieldNumber = 7;
  inline ::google::protobuf::int32 cancel_code() const;
  inline void set_cancel_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Order.wrapOrder)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_order_id();
  inline void clear_has_order_id();
  inline void set_has_order_time();
  inline void clear_has_order_time();
  inline void set_has_people();
  inline void clear_has_people();
  inline void set_has_cancel_code();
  inline void clear_has_cancel_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int64 order_id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 order_time_;
  ::google::protobuf::int32 people_;
  ::google::protobuf::int32 cancel_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_order_2eproto();
  friend void protobuf_AssignDesc_order_2eproto();
  friend void protobuf_ShutdownFile_order_2eproto();

  void InitAsDefaultInstance();
  static wrapOrder* default_instance_;
};
// -------------------------------------------------------------------

class wrapOrders : public ::google::protobuf::Message {
 public:
  wrapOrders();
  virtual ~wrapOrders();

  wrapOrders(const wrapOrders& from);

  inline wrapOrders& operator=(const wrapOrders& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const wrapOrders& default_instance();

  void Swap(wrapOrders* other);

  // implements Message ----------------------------------------------

  wrapOrders* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const wrapOrders& from);
  void MergeFrom(const wrapOrders& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Order.wrapOrder orders = 1;
  inline int orders_size() const;
  inline void clear_orders();
  static const int kOrdersFieldNumber = 1;
  inline const ::Order::wrapOrder& orders(int index) const;
  inline ::Order::wrapOrder* mutable_orders(int index);
  inline ::Order::wrapOrder* add_orders();
  inline const ::google::protobuf::RepeatedPtrField< ::Order::wrapOrder >&
      orders() const;
  inline ::google::protobuf::RepeatedPtrField< ::Order::wrapOrder >*
      mutable_orders();

  // @@protoc_insertion_point(class_scope:Order.wrapOrders)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Order::wrapOrder > orders_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_order_2eproto();
  friend void protobuf_AssignDesc_order_2eproto();
  friend void protobuf_ShutdownFile_order_2eproto();

  void InitAsDefaultInstance();
  static wrapOrders* default_instance_;
};
// ===================================================================


// ===================================================================

// wrapOrder

// required int32 version = 1 [default = 0];
inline bool wrapOrder::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void wrapOrder::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void wrapOrder::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void wrapOrder::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 wrapOrder::version() const {
  return version_;
}
inline void wrapOrder::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// optional int32 state = 2 [default = 0];
inline bool wrapOrder::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void wrapOrder::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void wrapOrder::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void wrapOrder::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 wrapOrder::state() const {
  return state_;
}
inline void wrapOrder::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional int32 type = 3 [default = 0];
inline bool wrapOrder::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void wrapOrder::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void wrapOrder::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void wrapOrder::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 wrapOrder::type() const {
  return type_;
}
inline void wrapOrder::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 order_id = 4 [default = 0];
inline bool wrapOrder::has_order_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void wrapOrder::set_has_order_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void wrapOrder::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void wrapOrder::clear_order_id() {
  order_id_ = GOOGLE_LONGLONG(0);
  clear_has_order_id();
}
inline ::google::protobuf::int64 wrapOrder::order_id() const {
  return order_id_;
}
inline void wrapOrder::set_order_id(::google::protobuf::int64 value) {
  set_has_order_id();
  order_id_ = value;
}

// optional int32 order_time = 5 [default = 0];
inline bool wrapOrder::has_order_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void wrapOrder::set_has_order_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void wrapOrder::clear_has_order_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void wrapOrder::clear_order_time() {
  order_time_ = 0;
  clear_has_order_time();
}
inline ::google::protobuf::int32 wrapOrder::order_time() const {
  return order_time_;
}
inline void wrapOrder::set_order_time(::google::protobuf::int32 value) {
  set_has_order_time();
  order_time_ = value;
}

// optional int32 people = 6 [default = 0];
inline bool wrapOrder::has_people() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void wrapOrder::set_has_people() {
  _has_bits_[0] |= 0x00000020u;
}
inline void wrapOrder::clear_has_people() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void wrapOrder::clear_people() {
  people_ = 0;
  clear_has_people();
}
inline ::google::protobuf::int32 wrapOrder::people() const {
  return people_;
}
inline void wrapOrder::set_people(::google::protobuf::int32 value) {
  set_has_people();
  people_ = value;
}

// optional int32 cancel_code = 7 [default = 0];
inline bool wrapOrder::has_cancel_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void wrapOrder::set_has_cancel_code() {
  _has_bits_[0] |= 0x00000040u;
}
inline void wrapOrder::clear_has_cancel_code() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void wrapOrder::clear_cancel_code() {
  cancel_code_ = 0;
  clear_has_cancel_code();
}
inline ::google::protobuf::int32 wrapOrder::cancel_code() const {
  return cancel_code_;
}
inline void wrapOrder::set_cancel_code(::google::protobuf::int32 value) {
  set_has_cancel_code();
  cancel_code_ = value;
}

// -------------------------------------------------------------------

// wrapOrders

// repeated .Order.wrapOrder orders = 1;
inline int wrapOrders::orders_size() const {
  return orders_.size();
}
inline void wrapOrders::clear_orders() {
  orders_.Clear();
}
inline const ::Order::wrapOrder& wrapOrders::orders(int index) const {
  return orders_.Get(index);
}
inline ::Order::wrapOrder* wrapOrders::mutable_orders(int index) {
  return orders_.Mutable(index);
}
inline ::Order::wrapOrder* wrapOrders::add_orders() {
  return orders_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Order::wrapOrder >&
wrapOrders::orders() const {
  return orders_;
}
inline ::google::protobuf::RepeatedPtrField< ::Order::wrapOrder >*
wrapOrders::mutable_orders() {
  return &orders_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Order

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_order_2eproto__INCLUDED
